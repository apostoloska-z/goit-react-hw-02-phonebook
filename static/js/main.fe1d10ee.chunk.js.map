{"version":3,"sources":["Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Section","title","children","className","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","required","onChange","id","Component","ContactItem","deleteHandler","onClick","ContactList","contacts","map","contact","Filter","App","filter","formSubmitHandler","data","find","toLowerCase","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe1d10ee.chunk.js","sourcesContent":["import \"./Section.scss\"\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"section__title\">{title}</h2>\r\n        {children}\r\n\r\n    </section>\r\n)\r\n\r\nexport default Section;","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./ContactForm.scss\"\r\n\r\nclass ContactForm extends Component  {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n        \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n         \r\n    }\r\n    \r\n    reset = () => {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                <label className=\"form__element\" htmlFor={this.nameInputId}>\r\n                    <span className=\"input__title\">Name</span>\r\n                <input className=\"input\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value = {this.state.name}\r\n                    onChange = {this.handleChange}\r\n                    id = {this.nameInputId}\r\n                />\r\n            </label>\r\n                <label className=\"form__element\" htmlFor={this.numberInputId}>\r\n                    <span className=\"input__title\">Number</span>    \r\n                <input className=\"input\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value = {this.state.number}\r\n                    onChange = {this.handleChange}\r\n                    id = {this.numberInputId}\r\n                />\r\n            </label>\r\n            <button className=\"button\" type=\"submit\"> Add contact</button>\r\n        </form>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default ContactForm;","import \"./ContactItem.scss\"\r\n\r\nconst ContactItem = ({ name, number, id, deleteHandler }) => (\r\n    <>\r\n        <span className=\"contact-item__data\">\r\n            {name} : {number}\r\n        </span>\r\n        <button\r\n            onClick={()=>deleteHandler(id)} \r\n            type=\"button\"\r\n            className=\"button\"\r\n        >Delete</button>\r\n    </>\r\n)\r\n\r\nexport default ContactItem;","import ContactItem from \"../ContactItem\"\r\nimport \"./ContactList.scss\"\r\n\r\nconst ContactList = ({ contacts, deleteHandler }) => (\r\n    <ul className=\"contact-list\">\r\n        {contacts.map((contact) => (\r\n            \r\n            <li className=\"contact-list__item\" key={contact.id}>\r\n                <ContactItem\r\n                    name={contact.name}\r\n                    number={contact.number}\r\n                    id={contact.id}\r\n                    deleteHandler={deleteHandler}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default ContactList;","import \"./Filter.scss\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className=\"input__title\"> Filter contacts by name\r\n        <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={value}\r\n            name=\"filter\"\r\n            onChange={onChange}\r\n        >\r\n        </input>\r\n    </label>\r\n)\r\n\r\nexport default Filter;","import { Component } from \"react\";\nimport Section from \"./Components/Section\";\nimport ContactForm from \"./Components/ContactForm\";\nimport ContactList from \"./Components/ContactList\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from \"./Components/Filter\";\nimport \"./App.scss\";\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n    name: '',\n    number: ''\n  }\n\n  formSubmitHandler = (data) => {\n    const { name, number } = data;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n\n    const alreadyExistingName = this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase()) \n\n    alreadyExistingName\n      ? alert(`${name} is already in contacts.`)\n      : this.setState((prevState) => {\n        return {\n          contacts: [contact, ...prevState.contacts]\n        }\n      })\n  }\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.target.value })\n  }\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  deleteContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id!==id)\n      }\n    })\n  }\n\n  render() {\n     return (\n      <>\n      <Section title=\"Phonebook\">\n        <ContactForm\n          onSubmit = {this.formSubmitHandler}\n        />\n      </Section>\n        \n      <Section title=\"Contacts\">\n        <Filter\n          value={this.state.filter}\n          onChange={this.changeFilter}\n        />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          deleteHandler={this.deleteContact}\n        />\n      </Section>\n      </>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}